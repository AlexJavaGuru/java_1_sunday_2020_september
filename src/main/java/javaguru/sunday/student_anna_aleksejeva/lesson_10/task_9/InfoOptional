Найдите в интернете информацию про класс java.util.Optional.

Для чего применяются объекты этого класса?
Какие два состояния могут быть у объектов этого класса?

Класс Optional<тип хранимого значения> — это класс-контейнер,
умеющий хранить внутри себя ровно одно значение объявленного типа —
<тип хранимого значения>, которое может там быть, но может и не быть.
Потому как это — опционально (Optional). Что бы узнать хранится ли сейчас внутри значение,
существует специальный маркер-флажок. Используя этот маркер и методы класса,
которые уже работают с учётом состояния флага, вы сможете уменьшить количество проверок на null.

Как создаются экземпляры данного класса?

Существует три прямых метода дальнейшего получения объекта семейства orElse();
Как следует из перевода, эти методы срабатывают в том случае,
если объекта в полученном Optional не нашлось.
orElse() — возвращает объект по дефолту даже и пустой.
orElseGet() — вызывает указанный метод (Если объект не найден,
Optional оставляет пространство для «Варианта Б» — Вы можете выполнить другой метод,
поискать в другом месте).
orElseThrow() — выбрасывает исключение ( мы можем получить объект или, если его нет,
выбросить исключение).

Как можно проверить в каком состоянии находится экземпляр данного класса?
Как можно получить объект, который находится внутри Optional?

get() — возвращает объект, если он есть.
map() — преобразовывает объект в другой объект.
filter() — фильтрует содержащиеся объекты по предикату.
flatmap() — возвращает множество в виде стрима.