 java.util.Optional, целями которого являются повышение null-safety и читаемости кода при работе со ссылками,
 значения которых могут быть null. Главная же цель Optional — замена null-значений,
 благодаря чему должна повышаться безопасность и читаемость кода.

 Optional - это класс оболочка, которая внутри себя содержит некоторое значение которое может быть NULL и
 если  это значение является NULL'ом, может предпринять какие-то действия, например бросить исключение или подставить значение по-умолчанию.

 Для создания Optional используются методы:
 - Optional.of
 - Optional.ofNullable
 - Optional.empty

 isPresent() Возвращает булево значение true если в опционале значение есть и возвращает false если в опционале значение null.

 get() Этот метод возвращает значение из опционала. Нужно аккуратно использовать этот метод, так как он может бросить исключение
  NoSuchElementException, если значение в опционале равно null. Чтобы безопасно использовать этот метод перед
  его вызовом надо вызвать метод isPresent().

  Optional.ofNullable(T value) Он получает значение, смотрит: если переданное значение это null то возвращаем пустой опционал,
   если значение не null, то создаем объект со значением через Optional.of(T value).